plugins {
    id 'java'
    id 'maven-publish'

    id 'io.freefair.lombok' version '5.0.0'
}

repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
    maven {
        url = "https://repo.mrkirby153.com/repository/maven-public/"
    }
}

group = 'com.mrkirby153'
version = '2.1'
targetCompatibility = '1.8'
sourceCompatibility = '1.8'

dependencies {
    // The production code uses the SLF4J logging API at compile time
    implementation 'org.slf4j:slf4j-api:1.7.25'
    runtimeOnly 'mysql:mysql-connector-java:8.0.18'
    compile 'org.jetbrains:annotations:19.0.0'

    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
}

task sourceJar(type: Jar, dependsOn: project.classes) {
    classifier 'sources'
    from sourceSets.main.delombokTask
}

task javadocJar(type: Jar, dependsOn: project.javadoc) {
    from javadoc.destinationDir
    classifier 'javadoc'
}

def propertyOrEnv(property, env) {
    return project.hasProperty(property)? project.properties[property] : System.getenv(env)
}

publishing {
    tasks.publish.dependsOn build
    repositories {
        maven {
            name = "mrkirby153"
            if (project.version.endsWith("-SNAPSHOT")) {
                url = "https://repo.mrkirby153.com/repository/maven-snapshots/"
            } else {
                url = "https://repo.mrkirby153.com/repository/maven-releases/"
            }
            credentials {
                username propertyOrEnv('repositoryUsername', 'REPO_USERNAME')
                password propertyOrEnv('repositoryPassword', 'REPO_PASS')
            }
        }
    }
    publications {
        jar(MavenPublication) {
            from components.java
            artifact tasks.sourceJar
            artifact tasks.javadocJar
        }
    }
}